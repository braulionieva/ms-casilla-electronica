CREATE OR REPLACE PACKAGE SISCAS.CAPK_NOTIFICACION AS
 /***********************************************************************
     * Nombre : SISCAS.CAPK_NOTIFICACION.CASP_INSERTAR_NOTIFICACION_GENERADOR
     * Autor : Christian Aronés Medina
     * Versión : 1.0
     * Descripción : Funcionalidad para insertar registros a la tabla SITV_NOTIFICACION desde generador utilizando el MS-CASILLA
     * Fecha de Creación : 05.04.2024
    ------------------------------------------------------------------------
    Fecha           Modificador por         DBA pase producción     Descripción del Cambio
    =========       ===============         ===================     ======================
    17/04/2024      Christian Arones                                se agrega campos de auditoria y nu_orden en tabla adjunto
'**********************************************************************/
-- PYL - TYPES PARA RECIBIR LAS C?DULAS A ENVIAR
-- NO MOVER NI MODIFICAR DE AQUI
TYPE NORE_DOCUMENTO_NOTIFICACION IS RECORD (
  ID_V_DOCUMENTO            SISCAS.SITV_NOTIFICACION_ADJUNTO.ID_V_DOCUMENTO%TYPE,
  CO_V_DOCUMENTO            SISCAS.SITV_NOTIFICACION_ADJUNTO.CO_V_DOCUMENTO%TYPE,
  NO_V_DOCUMENTO_ORIGEN     SISCAS.SITV_NOTIFICACION_ADJUNTO.NO_V_DOCUMENTO_ORIGEN%TYPE,
  NU_N_ORDEN                SISCAS.SITV_NOTIFICACION_ADJUNTO.NU_N_ORDEN%TYPE
);
TYPE NOAT_DOCUMENTO_NOTIFICACION IS TABLE OF NORE_DOCUMENTO_NOTIFICACION;
-- NO MOVER NI MODIFICAR HASTA AQUI

TYPE STRING_ARRAY IS TABLE OF VARCHAR2(5);


PROCEDURE CASP_INSERTAR_NOTIFICACION_GENERADOR (
                PI_V_ID_V_CEDULA                    IN SISNOTBF.NOTV_CEDULA.ID_V_CEDULA%TYPE,
                PI_V_CO_V_CASO                      IN SISCAS.SITV_NOTIFICACION.CO_V_CASO%TYPE,
                PI_V_FL_C_TIPO_CEDULA               IN SISCAS.SITV_NOTIFICACION.FL_C_TIPO_CEDULA%TYPE,
                PI_V_NO_V_TIPO_URGENCIA             IN SISCAS.SITV_NOTIFICACION.NO_V_TIPO_URGENCIA%TYPE,
                PI_V_NU_V_CEDULA                    IN SISCAS.SITV_NOTIFICACION.NU_V_CEDULA%TYPE,
                PI_V_NO_V_ACTO_PROCESAL             IN SISCAS.SITV_NOTIFICACION.NO_V_ACTO_PROCESAL%TYPE,
                PI_V_ID_V_ACTO_PROCESAL             IN SISCAS.SITV_NOTIFICACION.ID_V_ACTO_PROCESAL%TYPE,
                PI_V_NO_V_TRAMITE                   IN SISCAS.SITV_NOTIFICACION.NO_V_TRAMITE%TYPE,
                PI_V_ID_V_TRAMITE                   IN SISCAS.SITV_NOTIFICACION.ID_V_TRAMITE%TYPE,
                PI_V_FE_D_ENVIO                     IN VARCHAR2,
                PI_V_NO_V_TIPO_DOMICILIO            IN SISCAS.SITV_NOTIFICACION.NO_V_TIPO_DOMICILIO%TYPE,
                PI_N_ID_N_TIPO_DOMICILIO            IN SISCAS.SITV_NOTIFICACION.ID_N_TIPO_DOMICILIO%TYPE,
                PI_V_NO_V_ENTIDAD                   IN SISCAS.SITV_NOTIFICACION.NO_V_ENTIDAD%TYPE,
                PI_V_CO_V_ENTIDAD                   IN SISCAS.SITV_NOTIFICACION.CO_V_ENTIDAD%TYPE,
                PI_V_NO_V_DESPACHO                  IN SISCAS.SITV_NOTIFICACION.NO_V_DESPACHO%TYPE,
                PI_V_CO_V_DESPACHO                  IN SISCAS.SITV_NOTIFICACION.CO_V_DESPACHO%TYPE,
                PI_V_NO_V_ETAPA                     IN SISCAS.SITV_NOTIFICACION.NO_V_ETAPA%TYPE,
                PI_V_ID_V_ETAPA                     IN SISCAS.SITV_NOTIFICACION.ID_V_ETAPA%TYPE,
                PI_N_ID_N_TIPO_PARTE_SUJETO         IN SISCAS.SITV_NOTIFICACION.ID_N_TIPO_PARTE_SUJETO%TYPE,
                PI_V_NO_V_TIPO_PARTE_SUJETO         IN SISCAS.SITV_NOTIFICACION.NO_V_TIPO_PARTE_SUJETO%TYPE,
                PI_V_NO_V_CIUDADANO_COMPLETO        IN SISCAS.SITV_NOTIFICACION_AFILIADO.NO_V_CIUDADANO_COMPLETO%TYPE,
                PI_V_NU_V_DOCUMENTO                 IN SISCAS.SITV_NOTIFICACION_AFILIADO.NU_V_DOCUMENTO%TYPE,
                PI_V_ID_V_PERSONA                   IN SISCAS.SITV_NOTIFICACION_AFILIADO.ID_V_PERSONA%TYPE,
                PI_V_CO_V_USUARIO                   IN VARCHAR2,
                PI_C_DEFENSOR_PUBLICO               IN SISCAS.SITV_NOTIFICACION.FL_C_DEFENSOR_PUBLICO%TYPE,
                PI_V_USUARIO_CASILLA                IN VARCHAR2,
                PI_T_DOCUMENTO_NOTIFICACION         IN SISCAS.CAPK_NOTIFICACION.NOAT_DOCUMENTO_NOTIFICACION,
                PO_V_ERR_COD                        OUT VARCHAR2,
                PO_V_ERR_MSG                        OUT VARCHAR2);

PROCEDURE GET_NOTIFICATIONS(
      PI_V_ID_CASILLA   IN VARCHAR2,
      PI_V_ID_PERSONA   IN VARCHAR2,
      PI_N_TIPO_SESION 	IN VARCHAR2,
      PI_TRAMITE        IN VARCHAR2,
      PI_TAG            IN VARCHAR2,
      PI_ESTADO         IN VARCHAR2,
      PI_FOLDER         IN VARCHAR2,
      PI_ARCHIVADO      IN VARCHAR2,
      PI_FL_FOLDER		IN VARCHAR2,
      P_PAGE_SIZE       IN NUMBER,
      P_PAGE_NUMBER     IN NUMBER,
      P_CURSOR          OUT SYS_REFCURSOR,
      PO_TOTAL_ROWS     OUT NUMBER,
      PO_V_ERR_COD      OUT VARCHAR2,
      PO_V_ERR_MSG      OUT VARCHAR2
);


PROCEDURE OBTENER_NOTIFICACION(
  PI_V_ID_CASILLA          IN  VARCHAR,
  PI_V_ID_NOTIFICACICON               IN  VARCHAR2,
  P_CURSOR                OUT SYS_REFCURSOR,
  PO_V_ERR_COD OUT VARCHAR2,
  PO_V_ERR_MSG OUT VARCHAR2
);

PROCEDURE OBTENER_ADJUNTOS(
  PI_V_ID_NOTIFICACICON               IN  VARCHAR2,
  P_CURSOR                OUT SYS_REFCURSOR,
  PO_V_ERR_COD OUT VARCHAR2,
  PO_V_ERR_MSG OUT VARCHAR2
);

PROCEDURE OBTENER_ADJUNTO(
  PI_V_ID_NOTIFICACICON		IN  VARCHAR2,
  PI_V_ID_CASILLA         	IN VARCHAR2,
  PI_V_ID_DOCUMENTO         IN  VARCHAR2,
  P_CURSOR                	OUT SYS_REFCURSOR,
  PO_V_ERR_COD 				OUT VARCHAR2,
  PO_V_ERR_MSG 				OUT VARCHAR2
)
;

PROCEDURE REGISTRAR_ESTADO_LEIDO(
  PI_V_ID_NOTIFICACICON               IN  VARCHAR2,
  PO_V_ERR_COD OUT VARCHAR2,
  PO_V_ERR_MSG OUT VARCHAR2
);

PROCEDURE ARCHIVAR_NOTIFICACION(
  PI_V_ID_PERSONA          IN  VARCHAR,
  PI_V_ID_NOTIFICACION               IN  VARCHAR,
  PO_V_ERR_COD OUT VARCHAR2,
  PO_V_ERR_MSG OUT VARCHAR2
);

PROCEDURE OBTENER_NOMBRES_UBIGEO(
  PI_V_UBIGEO              IN  VARCHAR2,
  PO_NOMBRE_UBIGEO                OUT VARCHAR2,
  PO_V_ERR_COD OUT VARCHAR2,
  PO_V_ERR_MSG OUT VARCHAR2
);

PROCEDURE CASP_ACTUALIZAR_FLAG(
		PI_V_CASILLA     		IN  VARCHAR,
		PI_V_FLAG				IN  VARCHAR2,
  		PI_V_ID_NOTIFICACION  	IN 	VARCHAR2,
  		PO_V_ERR_COD 			OUT VARCHAR2,
  		PO_V_ERR_MSG 			OUT VARCHAR2
);


END CAPK_NOTIFICACION;

CREATE OR REPLACE PACKAGE BODY SISCAS.CAPK_NOTIFICACION AS

  EX_CONTROLADO EXCEPTION;

  PROCEDURE CASP_INSERTAR_NOTIFICACION_GENERADOR (
                PI_V_ID_V_CEDULA                    IN SISNOTBF.NOTV_CEDULA.ID_V_CEDULA%TYPE,
                PI_V_CO_V_CASO                      IN SISCAS.SITV_NOTIFICACION.CO_V_CASO%TYPE,
                PI_V_FL_C_TIPO_CEDULA               IN SISCAS.SITV_NOTIFICACION.FL_C_TIPO_CEDULA%TYPE,
                PI_V_NO_V_TIPO_URGENCIA             IN SISCAS.SITV_NOTIFICACION.NO_V_TIPO_URGENCIA%TYPE,
                PI_V_NU_V_CEDULA                    IN SISCAS.SITV_NOTIFICACION.NU_V_CEDULA%TYPE,
                PI_V_NO_V_ACTO_PROCESAL             IN SISCAS.SITV_NOTIFICACION.NO_V_ACTO_PROCESAL%TYPE,
                PI_V_ID_V_ACTO_PROCESAL             IN SISCAS.SITV_NOTIFICACION.ID_V_ACTO_PROCESAL%TYPE,
                PI_V_NO_V_TRAMITE                   IN SISCAS.SITV_NOTIFICACION.NO_V_TRAMITE%TYPE,
                PI_V_ID_V_TRAMITE                   IN SISCAS.SITV_NOTIFICACION.ID_V_TRAMITE%TYPE,
                PI_V_FE_D_ENVIO                     IN VARCHAR2,
                PI_V_NO_V_TIPO_DOMICILIO            IN SISCAS.SITV_NOTIFICACION.NO_V_TIPO_DOMICILIO%TYPE,
                PI_N_ID_N_TIPO_DOMICILIO            IN SISCAS.SITV_NOTIFICACION.ID_N_TIPO_DOMICILIO%TYPE,
                PI_V_NO_V_ENTIDAD                   IN SISCAS.SITV_NOTIFICACION.NO_V_ENTIDAD%TYPE,
                PI_V_CO_V_ENTIDAD                   IN SISCAS.SITV_NOTIFICACION.CO_V_ENTIDAD%TYPE,
                PI_V_NO_V_DESPACHO                  IN SISCAS.SITV_NOTIFICACION.NO_V_DESPACHO%TYPE,
                PI_V_CO_V_DESPACHO                  IN SISCAS.SITV_NOTIFICACION.CO_V_DESPACHO%TYPE,
                PI_V_NO_V_ETAPA                     IN SISCAS.SITV_NOTIFICACION.NO_V_ETAPA%TYPE,
                PI_V_ID_V_ETAPA                     IN SISCAS.SITV_NOTIFICACION.ID_V_ETAPA%TYPE,
                PI_N_ID_N_TIPO_PARTE_SUJETO         IN SISCAS.SITV_NOTIFICACION.ID_N_TIPO_PARTE_SUJETO%TYPE,
                PI_V_NO_V_TIPO_PARTE_SUJETO         IN SISCAS.SITV_NOTIFICACION.NO_V_TIPO_PARTE_SUJETO%TYPE,
                PI_V_NO_V_CIUDADANO_COMPLETO        IN SISCAS.SITV_NOTIFICACION_AFILIADO.NO_V_CIUDADANO_COMPLETO%TYPE,
                PI_V_NU_V_DOCUMENTO                 IN SISCAS.SITV_NOTIFICACION_AFILIADO.NU_V_DOCUMENTO%TYPE,
                PI_V_ID_V_PERSONA                   IN SISCAS.SITV_NOTIFICACION_AFILIADO.ID_V_PERSONA%TYPE,
                PI_V_CO_V_USUARIO                   IN VARCHAR2,
                PI_C_DEFENSOR_PUBLICO               IN SISCAS.SITV_NOTIFICACION.FL_C_DEFENSOR_PUBLICO%TYPE,
                PI_V_USUARIO_CASILLA                IN VARCHAR2,
                PI_T_DOCUMENTO_NOTIFICACION         IN SISCAS.CAPK_NOTIFICACION.NOAT_DOCUMENTO_NOTIFICACION,
                PO_V_ERR_COD                        OUT VARCHAR2,
                PO_V_ERR_MSG                        OUT VARCHAR2) AS

    V_N_COUNT NUMBER;
    V_V_ID_V_NOTIFICACION_AFILIADO SISCAS.SITV_NOTIFICACION_AFILIADO.ID_V_NOTIFICACION_AFILIADO%TYPE;
    V_V_ID_V_NOTIFICACION SISCAS.SITV_NOTIFICACION.ID_V_NOTIFICACION%TYPE;
    V_V_ID_V_CASILLA SISCAS.SITV_NOTIFICACION_AFILIADO.ID_V_CASILLA%TYPE;
    V_D_FE_D_ENTREGA SISCAS.SITV_NOTIFICACION.FE_D_ENTREGA%TYPE := SYSDATE;
    V_C_FL_DEFENSOR_PUBLICO SISCAS.SITV_NOTIFICACION.FL_C_DEFENSOR_PUBLICO%TYPE := '0';
  BEGIN

    SELECT COUNT(ID_V_CASILLA) INTO V_N_COUNT
    FROM SISCAS.SITV_CASILLA
    WHERE CO_V_USUARIO = PI_V_USUARIO_CASILLA;

    IF V_N_COUNT = 0 THEN
        PO_V_ERR_COD := '42201013';
        PO_V_ERR_MSG := 'LA CASILLA NO FUE ENCONTRADA O ESTA INACTIVA';
        RAISE EX_CONTROLADO;
    END IF;

    SELECT COUNT(ID_V_CASILLA) INTO V_N_COUNT
    FROM SISCAS.SITV_CASILLA
    WHERE CO_V_USUARIO = PI_V_USUARIO_CASILLA
      AND FL_C_DEFENSOR_PUBLICO = '1';

    IF V_N_COUNT = 0 AND PI_C_DEFENSOR_PUBLICO IS NOT NULL AND PI_C_DEFENSOR_PUBLICO = '1' THEN
       UPDATE SISCAS.SITV_CASILLA
          SET FL_C_DEFENSOR_PUBLICO = '1',
              FE_D_DEFENSOR_PUBLICO = SYSDATE
        WHERE CO_V_USUARIO = PI_V_USUARIO_CASILLA;
        V_C_FL_DEFENSOR_PUBLICO := '1';
    ELSIF V_N_COUNT > 0 AND PI_C_DEFENSOR_PUBLICO = '1' THEN
        V_C_FL_DEFENSOR_PUBLICO := '1';
    END IF;

    SELECT ID_V_CASILLA INTO V_V_ID_V_CASILLA
    FROM SISCAS.SITV_CASILLA
    WHERE CO_V_USUARIO = PI_V_USUARIO_CASILLA;

    SELECT COUNT(ID_V_PERSONA) INTO V_N_COUNT
    FROM SISCAS.SITV_NOTIFICACION_AFILIADO
    WHERE ID_V_PERSONA = PI_V_ID_V_PERSONA
    AND ID_V_CASILLA = V_V_ID_V_CASILLA;

    IF V_N_COUNT = 0 THEN
        INSERT INTO SISCAS.SITV_NOTIFICACION_AFILIADO(
            NO_V_CIUDADANO_COMPLETO,
            NU_V_DOCUMENTO,
            ID_V_CASILLA,
            ID_V_PERSONA,
            CO_V_US_CREACION,
            FE_D_CREACION
        ) VALUES (
            PI_V_NO_V_CIUDADANO_COMPLETO,
            PI_V_NU_V_DOCUMENTO,
            V_V_ID_V_CASILLA,
            PI_V_ID_V_PERSONA,
            PI_V_CO_V_USUARIO,
            SYSDATE
        ) RETURNING ID_V_NOTIFICACION_AFILIADO INTO V_V_ID_V_NOTIFICACION_AFILIADO;
    ELSE
        SELECT ID_V_NOTIFICACION_AFILIADO INTO V_V_ID_V_NOTIFICACION_AFILIADO
        FROM SISCAS.SITV_NOTIFICACION_AFILIADO
        WHERE ID_V_PERSONA = PI_V_ID_V_PERSONA
        AND ID_V_CASILLA = V_V_ID_V_CASILLA;
    END IF;

    --ALMACENANDO SITV_NOTIFICACION
    INSERT INTO SISCAS.SITV_NOTIFICACION(
        CO_V_CASO,
        FL_C_TIPO_CEDULA,
        NO_V_TIPO_URGENCIA,
        NU_V_CEDULA,
        NO_V_ACTO_PROCESAL,
        ID_V_ACTO_PROCESAL,
        NO_V_TRAMITE,
        ID_V_TRAMITE,
        FE_D_ENVIO,
        FE_D_ENTREGA,
        NO_V_TIPO_DOMICILIO,
        ID_N_TIPO_DOMICILIO,
        NO_V_ENTIDAD,
        CO_V_ENTIDAD,
        NO_V_DESPACHO,
        CO_V_DESPACHO,
        NO_V_ETAPA,
        ID_V_ETAPA,
        ID_V_NOTIFICACION_AFILIADO,
        NO_V_TIPO_PARTE_SUJETO,
        ID_N_TIPO_PARTE_SUJETO,
        CO_V_US_CREACION,
        FE_D_CREACION,
        ID_V_CEDULA,
        FL_C_DEFENSOR_PUBLICO
    ) VALUES (
        PI_V_CO_V_CASO,
        PI_V_FL_C_TIPO_CEDULA,
        PI_V_NO_V_TIPO_URGENCIA,
        PI_V_NU_V_CEDULA,
        PI_V_NO_V_ACTO_PROCESAL,
        PI_V_ID_V_ACTO_PROCESAL,
        PI_V_NO_V_TRAMITE,
        PI_V_ID_V_TRAMITE,
        TO_DATE(PI_V_FE_D_ENVIO,'DD/MM/YYYY HH24:MI:SS'),
        V_D_FE_D_ENTREGA,
        PI_V_NO_V_TIPO_DOMICILIO,
        PI_N_ID_N_TIPO_DOMICILIO,
        PI_V_NO_V_ENTIDAD,
        PI_V_CO_V_ENTIDAD,
        PI_V_NO_V_DESPACHO,
        PI_V_CO_V_DESPACHO,
        PI_V_NO_V_ETAPA,
        PI_V_ID_V_ETAPA,
        V_V_ID_V_NOTIFICACION_AFILIADO,
        PI_V_NO_V_TIPO_PARTE_SUJETO,
        PI_N_ID_N_TIPO_PARTE_SUJETO,
        PI_V_CO_V_USUARIO,
        SYSDATE,
        PI_V_ID_V_CEDULA,
        V_C_FL_DEFENSOR_PUBLICO
    ) RETURNING ID_V_NOTIFICACION INTO V_V_ID_V_NOTIFICACION;

    --ALMACENANDO DOCUMENTO
    FOR I IN 1..PI_T_DOCUMENTO_NOTIFICACION.COUNT LOOP
        INSERT INTO SISCAS.SITV_NOTIFICACION_ADJUNTO(
            ID_V_NOTIFICACION,
            ID_V_DOCUMENTO,
            CO_V_DOCUMENTO,
            NO_V_DOCUMENTO_ORIGEN,
            CO_V_US_CREACION,
            FE_D_CREACION,
            NU_N_ORDEN
        ) VALUES (
            V_V_ID_V_NOTIFICACION,
            PI_T_DOCUMENTO_NOTIFICACION(I).ID_V_DOCUMENTO,
            PI_T_DOCUMENTO_NOTIFICACION(I).CO_V_DOCUMENTO,
            PI_T_DOCUMENTO_NOTIFICACION(I).NO_V_DOCUMENTO_ORIGEN,
            PI_V_CO_V_USUARIO,
            SYSDATE,
            PI_T_DOCUMENTO_NOTIFICACION(I).NU_N_ORDEN
        );
    END LOOP;

    --ACTUALIZANDO FECHANOTIFICACION (FECHA ENTREGA) EN LA CEDULA
    UPDATE SISNOTBF.NOTV_CEDULA
        SET FE_D_ENTREGA = V_D_FE_D_ENTREGA,
            FE_D_MODIFICACION = SYSDATE,
            CO_V_US_MODIFICACION = PI_V_CO_V_USUARIO
    WHERE ID_V_CEDULA = PI_V_ID_V_CEDULA;

    COMMIT;

    PO_V_ERR_COD := '0';
    PO_V_ERR_MSG := 'LA OPERACIÓN SE REALIZÓ SATISFACTORIAMENTE';

    EXCEPTION
        WHEN EX_CONTROLADO THEN
            DBMS_OUTPUT.PUT_LINE('ERROR CONTROLADO : '|| PO_V_ERR_COD || ' - ' || PO_V_ERR_MSG);
        WHEN OTHERS THEN
            PO_V_ERR_COD := '1';
            PO_V_ERR_MSG := 'CAPK_NOTIFICACION.CASP_INSERTAR_NOTIFICACION_GENERADOR - ERROR: '||SQLERRM;
  END CASP_INSERTAR_NOTIFICACION_GENERADOR;



PROCEDURE GET_NOTIFICATIONS(
      PI_V_ID_CASILLA   IN VARCHAR2,
      PI_V_ID_PERSONA   IN VARCHAR2,
      PI_N_TIPO_SESION 	IN VARCHAR2,
      PI_TRAMITE        IN VARCHAR2,
      PI_TAG            IN VARCHAR2,
      PI_ESTADO         IN VARCHAR2,
      PI_FOLDER         IN VARCHAR2,
      PI_ARCHIVADO      IN VARCHAR2,
      PI_FL_FOLDER		IN VARCHAR2,
      P_PAGE_SIZE       IN NUMBER,
      P_PAGE_NUMBER     IN NUMBER,
      P_CURSOR          OUT SYS_REFCURSOR,
      PO_TOTAL_ROWS     OUT NUMBER,
      PO_V_ERR_COD      OUT VARCHAR2,
      PO_V_ERR_MSG      OUT VARCHAR2
)
AS
      V_OFFSET NUMBER := (P_PAGE_NUMBER - 1) * P_PAGE_SIZE;
      V_SQL VARCHAR2(32767) := '';
      COND VARCHAR2(32767) := '';
      V_SQL_COUNT VARCHAR2(32767) := '';
     V_V_ABOGADO VARCHAR2(4) := 'Xq7f';
     V_V_DEFENSOR_PUBLICO VARCHAR2(4) := 'Gy2P';
   	 V_V_PERSONA_NATURAL VARCHAR2(4) := 'Tn8L';


BEGIN
      V_SQL := 'SELECT * FROM (SELECT SN.FL_C_DESTACADO, SN.FL_C_IMPORTANTE, SN.ID_V_NOTIFICACION, SN.FE_D_ENVIO, SN.FL_C_LEIDO STATUS, SN.NO_V_TIPO_PARTE_SUJETO, SN.NO_V_ETAPA, SN.NO_V_ACTO_PROCESAL, SN.NO_V_TRAMITE, SN.CO_V_CASO, SN.FL_C_TIPO_CEDULA, SN.NU_V_CEDULA, SN.NO_V_TIPO_URGENCIA, SN.ID_N_CARPETA, SN.FL_C_ARCHIVADO, NO_V_CIUDADANO_COMPLETO FROM SISCAS.SITV_NOTIFICACION SN INNER JOIN SISCAS.SITV_NOTIFICACION_AFILIADO SNA ON SN.ID_V_NOTIFICACION_AFILIADO = SNA.ID_V_NOTIFICACION_AFILIADO WHERE SNA.ID_V_CASILLA = ''' || PI_V_ID_CASILLA || '''';

      IF PI_TRAMITE IS NOT NULL THEN
        COND := COND || ' AND UPPER(SN.NO_V_TRAMITE) LIKE ''%' || UPPER(PI_TRAMITE) || '%''';
      END IF;

      IF PI_TAG IS NOT NULL THEN
        COND := COND || ' AND SN.FL_C_TIPO_CEDULA = ''' || PI_TAG || '''';
      END IF;

      IF PI_ESTADO IS NOT NULL THEN
        COND := COND || ' AND SN.FL_C_LEIDO = ''' || PI_ESTADO || '''';
      END IF;

     -- IF PI_FOLDER IS NOT NULL THEN
       -- COND := COND || ' AND SN.ID_N_CARPETA = ''' || PI_FOLDER || '''';
      -- END IF;

      IF PI_FL_FOLDER = '4' THEN
     	COND := COND || ' AND SN.FL_C_IMPORTANTE = ''1''';
      ELSIF PI_FL_FOLDER = '3' THEN
      	COND := COND || ' AND SN.FL_C_DESTACADO = ''1''';
      END IF;

      IF PI_ARCHIVADO = '5' THEN
        COND := COND || ' AND SN.FL_C_ARCHIVADO = ''1''';
      ELSE
       	COND := COND || ' AND SN.FL_C_ARCHIVADO = ''0''';
      END IF;

     IF PI_N_TIPO_SESION = V_V_PERSONA_NATURAL THEN
     	COND := COND || ' AND SNA.ID_V_PERSONA = ''' || PI_V_ID_PERSONA || ''' AND SN.FL_C_DEFENSOR_PUBLICO=''0''';
     ELSIF PI_N_TIPO_SESION = V_V_ABOGADO THEN
    	COND := COND || ' AND SNA.ID_V_PERSONA <> ''' || PI_V_ID_PERSONA || ''' AND SN.FL_C_DEFENSOR_PUBLICO=''0''';
     ELSE
     	COND := COND || ' AND SNA.ID_V_PERSONA <> ''' || PI_V_ID_PERSONA || ''' AND SN.FL_C_DEFENSOR_PUBLICO=''1''';
     END IF;

      V_SQL := V_SQL || COND || ' ORDER BY SN.FL_C_LEIDO ASC, SN.FE_D_ENVIO DESC) OFFSET ' || V_OFFSET || ' ROWS FETCH NEXT ' || P_PAGE_SIZE || ' ROWS ONLY';

      -- Execute the main query
      PO_V_ERR_COD := '0';
      PO_V_ERR_MSG := 'OK';
     DBMS_OUTPUT.PUT_LINE('Notification: ' || V_SQL);
      OPEN P_CURSOR FOR V_SQL;

      -- Count query to return the total rows
      V_SQL_COUNT := 'SELECT COUNT(SN.ID_V_NOTIFICACION) FROM SISCAS.SITV_NOTIFICACION SN INNER JOIN SISCAS.SITV_NOTIFICACION_AFILIADO SNA ON SN.ID_V_NOTIFICACION_AFILIADO = SNA.ID_V_NOTIFICACION_AFILIADO WHERE SNA.ID_V_CASILLA = ''' || PI_V_ID_CASILLA || '''' || COND;
	 EXECUTE IMMEDIATE V_SQL_COUNT INTO PO_TOTAL_ROWS;
	PO_V_ERR_MSG := 'No se encontraron datos para esa persona ' || V_SQL ;
EXCEPTION
    WHEN NO_DATA_FOUND THEN
      PO_V_ERR_COD := '1';
      PO_V_ERR_MSG := 'No se encontraron datos para esa persona';
    WHEN OTHERS THEN
      PO_V_ERR_COD := '1';
      PO_V_ERR_MSG := SQLERRM || ' ' || SQLCODE;
END GET_NOTIFICATIONS;








PROCEDURE OBTENER_NOTIFICACION(
  PI_V_ID_CASILLA          IN  VARCHAR,
  PI_V_ID_NOTIFICACICON               IN  VARCHAR2,
  P_CURSOR                OUT SYS_REFCURSOR,
  PO_V_ERR_COD OUT VARCHAR2,
  PO_V_ERR_MSG OUT VARCHAR2
)

AS

BEGIN
	PO_V_ERR_COD := '0';
    PO_V_ERR_MSG := 'OK';

  OPEN P_CURSOR FOR
    SELECT SN.ID_V_NOTIFICACION, SNA.NO_V_CIUDADANO_COMPLETO, SN.FE_D_ENVIO, SN.NU_V_CEDULA,
			SN.FL_C_TIPO_CEDULA, SN.NO_V_DESPACHO, SN.CO_V_CASO, SN.NO_V_ENTIDAD,
			SN.NO_V_TIPO_DOMICILIO, sna.NU_V_DOCUMENTO ID_N_TIPO_DOMICILIO, SN.FL_C_LEIDO STATUS, sn.FL_C_ARCHIVADO
	FROM SISCAS.SITV_NOTIFICACION_AFILIADO sna
		INNER JOIN SISCAS.SITV_NOTIFICACION sn
			ON SN.ID_V_NOTIFICACION_AFILIADO = SNA.ID_V_NOTIFICACION_AFILIADO
	WHERE SNA.ID_V_CASILLA = PI_V_ID_CASILLA
		AND SN.ID_V_NOTIFICACION = PI_V_ID_NOTIFICACICON;



EXCEPTION
    WHEN NO_DATA_FOUND THEN
    	PO_V_ERR_COD := '1';
        PO_V_ERR_MSG := 'No se encontraron datos para esta notificación';
    WHEN OTHERS THEN
        PO_V_ERR_COD := '1';
        PO_V_ERR_MSG := SQLERRM || ' ' || SQLCODE;


END OBTENER_NOTIFICACION;


PROCEDURE OBTENER_ADJUNTOS(
  PI_V_ID_NOTIFICACICON               IN  VARCHAR2,
  P_CURSOR                OUT SYS_REFCURSOR,
  PO_V_ERR_COD OUT VARCHAR2,
  PO_V_ERR_MSG OUT VARCHAR2
)

AS

BEGIN
	PO_V_ERR_COD := '0';
    PO_V_ERR_MSG := 'OK';

  OPEN P_CURSOR FOR
    SELECT SNA.NU_N_ORDEN, SNA.FE_D_CREACION, SNA.ID_V_NOTIFICACION_ADJUNTO, SNA.NO_V_DOCUMENTO_ORIGEN, SNA.CO_V_DOCUMENTO, SNA.FE_D_CREACION, SNA.ID_V_DOCUMENTO
FROM SISCAS.SITV_NOTIFICACION_ADJUNTO sna
WHERE SNA.ID_V_NOTIFICACION = PI_V_ID_NOTIFICACICON ORDER BY  NU_N_ORDEN ASC, CO_V_DOCUMENTO ASC ;



EXCEPTION
    WHEN NO_DATA_FOUND THEN
    	PO_V_ERR_COD := '0';
        PO_V_ERR_MSG := 'No se encontraron datos para esta notificación';
    WHEN OTHERS THEN
        PO_V_ERR_COD := '1';
        PO_V_ERR_MSG := SQLERRM || ' ' || SQLCODE;


END OBTENER_ADJUNTOS;


PROCEDURE OBTENER_ADJUNTO(
  PI_V_ID_NOTIFICACICON		IN  VARCHAR2,
  PI_V_ID_CASILLA         	IN VARCHAR2,
  PI_V_ID_DOCUMENTO         IN  VARCHAR2,
  P_CURSOR                	OUT SYS_REFCURSOR,
  PO_V_ERR_COD 				OUT VARCHAR2,
  PO_V_ERR_MSG 				OUT VARCHAR2
)

AS

BEGIN
	PO_V_ERR_COD := '0';
  OPEN P_CURSOR FOR
    SELECT SNA.NU_N_ORDEN, SNA.FE_D_CREACION, SNA.ID_V_NOTIFICACION_ADJUNTO, SNA.ID_V_DOCUMENTO  FROM SISCAS.SITV_NOTIFICACION_ADJUNTO SNA
	INNER JOIN SISCAS.SITV_NOTIFICACION SN
		ON SN.ID_V_NOTIFICACION = SNA.ID_V_NOTIFICACION
	INNER JOIN SISCAS.SITV_NOTIFICACION_AFILIADO AF ON AF.ID_V_NOTIFICACION_AFILIADO = SN.ID_V_NOTIFICACION_AFILIADO
	INNER JOIN SISCAS.SITV_CASILLA sc ON SC.ID_V_CASILLA = AF.ID_V_CASILLA
	WHERE AF.ID_V_CASILLA = PI_V_ID_CASILLA AND SN.ID_V_NOTIFICACION = PI_V_ID_NOTIFICACICON AND SNA.ID_V_DOCUMENTO = PI_V_ID_DOCUMENTO;

EXCEPTION
WHEN NO_DATA_FOUND THEN
	PO_V_ERR_COD := '1';
  PO_V_ERR_MSG := 'No se encontraron datos para esta notificación';

WHEN OTHERS THEN
	PO_V_ERR_COD := '-1';
  PO_V_ERR_MSG := SQLERRM || ' ' || SQLCODE;

END OBTENER_ADJUNTO;



PROCEDURE REGISTRAR_ESTADO_LEIDO(
  PI_V_ID_NOTIFICACICON               IN  VARCHAR2,
  PO_V_ERR_COD OUT VARCHAR2,
  PO_V_ERR_MSG OUT VARCHAR2
)

AS

BEGIN
	PO_V_ERR_COD := '0';
    PO_V_ERR_MSG := 'OK';
 -- STATUS = 1 READ
  UPDATE  SISCAS.SITV_NOTIFICACION SET FL_C_LEIDO = '1', FE_D_LECTURA = SYSDATE
WHERE ID_V_NOTIFICACION = PI_V_ID_NOTIFICACICON;



EXCEPTION
    WHEN NO_DATA_FOUND THEN
    	PO_V_ERR_COD := '1';
        PO_V_ERR_MSG := 'No se encontraron datos para esta notificación';
    WHEN OTHERS THEN
        PO_V_ERR_COD := '1';
        PO_V_ERR_MSG := SQLERRM || ' ' || SQLCODE;


END REGISTRAR_ESTADO_LEIDO;



PROCEDURE ARCHIVAR_NOTIFICACION(
  PI_V_ID_PERSONA          IN  VARCHAR,
  PI_V_ID_NOTIFICACION               IN  VARCHAR,
  PO_V_ERR_COD OUT VARCHAR2,
  PO_V_ERR_MSG OUT VARCHAR2
)

AS
	V_EXISTE NUMBER;
 	v_current_id VARCHAR2(255);
	v_position INT := 1;
BEGIN
	PO_V_ERR_COD := '0';
    PO_V_ERR_MSG := 'OK';

  -- Bucle para procesar cada ID de la cadena.
  LOOP
    v_current_id := REGEXP_SUBSTR(PI_V_ID_NOTIFICACION, '[^,]+', 1, v_position);
    EXIT WHEN v_current_id IS NULL;

    -- Aquí iría la lógica para procesar cada ID, por ejemplo, una actualización.
    UPDATE SISCAS.SITV_NOTIFICACION
    SET FL_C_ARCHIVADO = CASE WHEN FL_C_ARCHIVADO = '0' THEN '1' ELSE '0' END,
    	FL_C_IMPORTANTE = CASE WHEN FL_C_ARCHIVADO = '0' THEN '0' ELSE FL_C_IMPORTANTE END,
        FL_C_DESTACADO = CASE WHEN FL_C_ARCHIVADO = '0' THEN '0' ELSE FL_C_DESTACADO END
    WHERE ID_V_NOTIFICACION = v_current_id
    AND EXISTS (
      SELECT 1 FROM SISCAS.SITV_NOTIFICACION_AFILIADO
      WHERE ID_V_NOTIFICACION_AFILIADO = ID_V_NOTIFICACION_AFILIADO
      AND ID_V_CASILLA = PI_V_ID_PERSONA
    );

    -- Incrementar la posición para obtener el siguiente ID.
    v_position := v_position + 1;
  END LOOP;

EXCEPTION
    WHEN NO_DATA_FOUND THEN
    	PO_V_ERR_COD := '1';
        PO_V_ERR_MSG := 'No se encontraron datos para esta notificación';
    WHEN OTHERS THEN
        PO_V_ERR_COD := '1';
        PO_V_ERR_MSG := SQLERRM || ' ' || SQLCODE;


END ARCHIVAR_NOTIFICACION;


PROCEDURE OBTENER_NOMBRES_UBIGEO(
  		PI_V_UBIGEO			IN  VARCHAR2,
  		PO_NOMBRE_UBIGEO    OUT VARCHAR2,
  		PO_V_ERR_COD 		OUT VARCHAR2,
  		PO_V_ERR_MSG 		OUT VARCHAR2
)
AS

BEGIN
	PO_V_ERR_COD := '0';
    PO_V_ERR_MSG := 'OK';

   SELECT  d.NO_V_DPTO_GEOGRAFICA || ' ' ||
    p.NO_V_PROV_GEOGRAFICA || ' ' ||
    dg.NO_V_DIST_GEOGRAFICA INTO PO_NOMBRE_UBIGEO
FROM
    SISMAESTBF.CFTM_DIST_GEOGRAFICA dg
    JOIN SISMAESTBF.CFTM_PROV_GEOGRAFICA p ON dg.CO_V_DPTO_GEOGRAFICA = p.CO_V_DPTO_GEOGRAFICA
                                           AND dg.CO_V_PROV_GEOGRAFICA = p.CO_V_PROV_GEOGRAFICA
    JOIN SISMAESTBF.CFTM_DPTO_GEOGRAFICA d ON p.CO_V_DPTO_GEOGRAFICA = d.CO_V_DPTO_GEOGRAFICA
WHERE
    dg.CO_V_UBIGEO_RENIEC = PI_V_UBIGEO;

EXCEPTION
    WHEN NO_DATA_FOUND THEN
    	PO_V_ERR_COD := '1';
        PO_V_ERR_MSG := 'No se encontraron datos para este ubigeo';
    WHEN OTHERS THEN
        PO_V_ERR_COD := '1';
        PO_V_ERR_MSG := SQLERRM || ' ' || SQLCODE;


END OBTENER_NOMBRES_UBIGEO;


PROCEDURE CASP_ACTUALIZAR_FLAG(
		PI_V_CASILLA     		IN  VARCHAR,
		PI_V_FLAG				IN  VARCHAR2,
  		PI_V_ID_NOTIFICACION  	IN VARCHAR2,
  		PO_V_ERR_COD 			OUT VARCHAR2,
  		PO_V_ERR_MSG 			OUT VARCHAR2
) AS

	V_EXISTE NUMBER;
 	v_current_id VARCHAR2(255);
	v_position INT := 1;

BEGIN
	PO_V_ERR_COD := '0';
    PO_V_ERR_MSG := 'OK';


   LOOP
    v_current_id := REGEXP_SUBSTR(PI_V_ID_NOTIFICACION, '[^,]+', 1, v_position);
    EXIT WHEN v_current_id IS NULL;

    IF (PI_V_FLAG = '3') THEN
    	UPDATE SISCAS.SITV_NOTIFICACION
    	SET FL_C_DESTACADO = CASE WHEN FL_C_DESTACADO = '0' THEN '1' ELSE '0' END
    	WHERE ID_V_NOTIFICACION = v_current_id
    	AND EXISTS (
      		SELECT 1 FROM SISCAS.SITV_NOTIFICACION_AFILIADO
      		WHERE ID_V_NOTIFICACION_AFILIADO = ID_V_NOTIFICACION_AFILIADO
      		AND ID_V_CASILLA = PI_V_CASILLA
    	);
    ELSIF (PI_V_FLAG = '4') THEN
    	UPDATE SISCAS.SITV_NOTIFICACION
    	SET FL_C_IMPORTANTE = CASE WHEN FL_C_IMPORTANTE = '0' THEN '1' ELSE '0' END
    	WHERE ID_V_NOTIFICACION = v_current_id
    	AND EXISTS (
      		SELECT 1 FROM SISCAS.SITV_NOTIFICACION_AFILIADO
      		WHERE ID_V_NOTIFICACION_AFILIADO = ID_V_NOTIFICACION_AFILIADO
      		AND ID_V_CASILLA = PI_V_CASILLA
    	);
    END IF;

    v_position := v_position + 1;

   END LOOP;


EXCEPTION
    WHEN OTHERS THEN
        PO_V_ERR_COD := '-1';
        PO_V_ERR_MSG := SQLERRM || ' ' || SQLCODE;


END CASP_ACTUALIZAR_FLAG;

END CAPK_NOTIFICACION;